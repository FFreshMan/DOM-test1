{"version":3,"sources":["dom.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call","on","eventName","addEventListener"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,IADW,gBACNC,QADM,EACIC,KADJ,EACW;AACpB,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACD,GAHU;AAGR;AAEHI,EAAAA,KALW,iBAKLC,IALK,EAKCC,IALD,EAKOC,KALP,EAKc;AACvB,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B;AACAJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACD,KAHD,MAGO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACA,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACD,OAHD,MAGO,IAAIA,IAAI,YAAYI,MAApB,EAA4B;AACjC;AACA,YAAMC,MAAM,GAAGL,IAAf;;AACA,aAAK,IAAIM,GAAT,IAAgBD,MAAhB,EAAwB;AACtBN,UAAAA,IAAI,CAACD,KAAL,CAAWQ,GAAX,IAAkBD,MAAM,CAACC,GAAD,CAAxB;AACD;AACF;AACF;AACF,GArBU;AAsBXC,EAAAA,IAtBW,gBAsBNC,QAtBM,EAsBIC,EAtBJ,EAsBQ;AACjB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACL,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACxCD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAcH,QAAQ,CAACE,CAAD,CAAtB;AACD;AACF,GA1BU;AA0BR;AAEHE,EAAAA,EA5BW,cA4BRb,IA5BQ,EA4BFc,SA5BE,EA4BSJ,EA5BT,EA4Ba;AACtBV,IAAAA,IAAI,CAACe,gBAAL,CAAsBD,SAAtB,EAAiCJ,EAAjC;AACD,GA9BU,CA8BT;;AA9BS,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  }, //scope用来指定在哪个标签里找\r\n\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      // dom.style(div,\"color\",\"red\")\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        // dom.style(div,\"color\")想知道color的值\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        //想写入一个属性,注意这里Object大写\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  }, //遍历\r\n\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  } //事件监听\r\n};\r\n"]}